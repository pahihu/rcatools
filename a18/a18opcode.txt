Appendix A -- Instruction Summary (from Tom Pittman's short course)
http://www.cosmacelf.com/shortcourse.htm#chapter2

      MNEM	NAME					OPCODE	CYCLES
      ADC	Add with Carry				74	2
      ADCI b	Add with Carry Immediate		7C bb	2
      ADD	Add					F4	2
      ADI b	Add Immediate				FC bb	2
      AND	Logical AND				F2	2
      ANI b	AND Immediate				FA bb	2
      B1 a	Branch on External Flag 1		34 aa	2
      B2 a	Branch on External Flag 2		35 aa	2
      B3 a	Branch on External Flag 3		36 aa	2
      B4 a	Branch on External Flag 4		37 aa	2
      BDF a	Branch if DF is 1			33 aa	2
      BN1 a	Branch on Not External Flag 1		3C aa	2
      BN2 a	Branch on Not External Flag 2		3D aa	2
      BN3 a	Branch on Not External Flag 3		3E aa	2
      BN4 a	Branch on Not External Flag 4		3F aa	2
      BNF a	Branch if DF is 0			3B aa	2
      BNQ a	Branch if Q is off			39 aa	2
      BNZ a	Branch on Not Zero			3A aa	2
      BQ a	Branch if Q is on			31 aa	2
      BR a	Branch unconditionally			30 aa	2
      BZ a	Branch on Zero				32 aa	2
      DEC r	Decrement Register			2r	2
      DIS	Return and Disable Interrupts		71	2
      GHI r	Get High byte of Register		9r	2
      GLO r	Get Low byte of Register		8r	2
      IDL	Idle					00	2
      INC r	Increment Register			1r	2
      INP p	Input to memory and D (for p = 9 to F)	6p	2
      IRX	Increment R(X)				60	2
      LBDF aa	Long Branch if DF is 1			C3 aaaa	3
      LBNF aa	Long Branch if DF is 0			CB aaaa	3
      LBNQ aa	Long Branch if Q is off			C9 aaaa	3
      LBNZ aa	Long Branch if Not Zero			CA aaaa	3
      LBQ aa	Long Branch if Q is on			C1 aaaa	3
      LBR aa	Long Branch unconditionally		C0 aaaa	3
      LBZ aa	Long Branch if Zero			C2 aaaa	3
      LDA r	Load D and Advance			4r	2
      LDI b	Load D Immediate			F8 bb	2
      LDN r	Load D via N (for r = 1 to F)		0r	2
      LDX	Load D via R(X)				F0	2
      LDXA	Load D via R(X) and Advance		72	2
      LSDF	Long Skip if DF is 1			CF	3
      LSIE	Long Skip if Interrupts Enabled		CC	3
      LSKP	Long Skip				C8	3
      LSNF	Long Skip if DF is 0			C7	3
      LSNQ	Long Skip if Q is off			C5	3
      LSNZ	Long Skip if Not Zero			C6	3
      LSQ	Long Skip if Q is on			CD	3
      LSZ	Long Skip if Zero			CE	3
      MARK	Save X and P in T			79	2
      NOP	No Operation				C4	3
      OR	Logical OR				F1	2
      ORI b	OR Immediate				F9 bb	2
      OUT p	Output from memory (for p = 1 to 7)	6p	2
      PHI r	Put D in High byte of register		Br	2
      PLO r	Put D in Low byte of register		Ar	2
      REQ	Reset Q					7A	2
      RET	Return					70	2
      SAV	Save T					78	2
      SD	Subtract D from memory			F5	2
      SDB	Subtract D from memory with Borrow	75	2
      SDBI b	Subtract D with Borrow, Immediate	7D bb	2
      SDI b	Subtract D from memory Immediate byte	FD bb	2
      SEP r	Set P					Dr	2
      SEQ	Set Q					7B	2
      SEX r	Set X					Er	2
      SHL	Shift D Left				FE	2
      SHLC	Shift D Left with Carry			7E	2
      SHR	Shift D Right				F6	2
      SHRC	Shift D Right with Carry		76	2
      SKP	Skip one byte				38	2
      SM	Subtract Memory from D			F7	2
      SMB	Subtract Memory from D with Borrow	77	2
      SMBI b	Subtract Memory with Borrow, Immediate	7F bb	2
      SMI b	Subtract Memory from D, Immediate	FF bb	2
      STR r	Store D into memory			5r	2
      STXD	Store D via R(X) and Decrement		73	2
      XOR	Exclusive OR				F3	2
      XRI b	Exclusive OR, Immediate			FB bb	2
